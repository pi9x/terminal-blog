name: Deploy Frontend to S3

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - frontend/**
      - .github/workflows/deploy-frontend.yml

concurrency:
  group: frontend-deployment
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET: ${{ secrets.AWS_S3_APP_BUCKET }}
  CF_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Setup Node
        uses: actions/setup-node@v5.0.0
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build static export (out/)
        env:
          NODE_ENV: production
          # Optionally set NEXT_PUBLIC_POSTS_BASE if your posts live on another domain:
          # NEXT_PUBLIC_POSTS_BASE: ${{ secrets.NEXT_PUBLIC_POSTS_BASE }}
        run: npm run build

      - name: Configure AWS credentials (assume role if provided)
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          # Fallback to static keys if role isnâ€™t provided
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync site (everything except _next) to S3
        run: |
          aws s3 sync ./out "s3://${S3_BUCKET}" \
            --delete \
            --exclude "_next/*" \
            --cache-control "public, max-age=300, s-maxage=300"

      - name: Sync Next static assets with long cache headers
        run: |
          if [ -d "./out/_next/static" ]; then
            aws s3 sync ./out/_next/static "s3://${S3_BUCKET}/_next/static" \
              --delete \
              --cache-control "public, max-age=31536000, immutable"
          fi

      - name: Invalidate CloudFront (HTML entry points)
        if: env.CF_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CF_DISTRIBUTION_ID}" \
            --paths "/index.html" "/"

      - name: Upload build artifact (out/)
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: frontend-out
          path: frontend/out
